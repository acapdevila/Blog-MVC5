@model string

@{
    string name = ViewData.TemplateInfo.HtmlFieldPrefix;
    string id = name.Replace(".", "_");
}


@Html.TextBox("",Model, htmlAttributes : new { @class = "form-control" , placeholder= "Separar por ';'" } )

<script type="text/javascript">
    $(function () {
        function split(val) {
            return val.split(/;\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }

        $("#@(id)")
             .bind("keydown", function (event) {
                 if (event.keyCode === $.ui.keyCode.TAB &&
                     $(this).data("ui-autocomplete").menu.active) {
                     event.preventDefault();
                 }
             })
        .autocomplete({
               source: function (request, response) {
                //define a function to call your Action
                   $.ajax({
                       url: '@(Url.Action(ViewData["ajaxCallbackUrlAction"].ToString(), ViewData["ajaxCallbackUrlController"].ToString()))',
                       type: "GET",
                       dataType: "json",
                       //query will be the param used by your action method
                       data: { term: extractLast(request.term) },
                       //term: extractLast(request.term),
                       success: function(data) {
                           response($.map(data, function(item) {
                               return { label: item.value, value: item.value };
                           }));
                       }
                   });
               },
            search: function () {
                // custom minLength
                var term = extractLast(this.value);
                if (term.length < 1) {
                    return false;
                }
                return true;
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                var terms = split(this.value);
                // remove the current input
                terms.pop();
                // add the selected item
                terms.push(ui.item.value);
                // add placeholder to get the comma-and-space at the end
                terms.push("");
                this.value = terms.join("; ");
                return false;
            }
        });

    });
</script>

